set(BREEZE_DEPLOY_SOURCE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
file(GLOB_RECURSE BREEZE_DEPLOY_HEADS ${BREEZE_DEPLOY_SOURCE_DIRECTORY}/*.h)
file(GLOB_RECURSE BREEZE_DEPLOY_SOURCES ${BREEZE_DEPLOY_SOURCE_DIRECTORY}/*.cpp)
add_library(${CMAKE_PROJECT_NAME} SHARED ${BREEZE_DEPLOY_SOURCES})

target_include_directories(${CMAKE_PROJECT_NAME} PRIVATE ${RUNTIME_INCLUDE_DIRS})

set_target_properties(${CMAKE_PROJECT_NAME} PROPERTIES VISIBILITY_INLINES_HIDDEN TRUE)
set_target_properties(${CMAKE_PROJECT_NAME} PROPERTIES C_VISIBILITY_PRESET hidden)
set_target_properties(${CMAKE_PROJECT_NAME} PROPERTIES POSITION_INDEPENDENT_CODE TRUE)

target_compile_options(${CMAKE_PROJECT_NAME} PRIVATE -fvisibility=hidden)

find_package(OpenBLAS REQUIRED)
target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE -Wl,--whole-archive -Wl,-Bsymbolic ${FAISS_LIBRARIES} OpenBLAS::OpenBLAS ${SPDLOG_LIBRARIES} ${EIGEN_LIBRARIES} ${YAML_CPP_LIBRARIES})
target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE -Wl,--no-whole-archive -Wl,-Bsymbolic ${OPENCV_LIBRARIES})
# 安装头文件
install(DIRECTORY ${BREEZE_DEPLOY_SOURCE_DIRECTORY}
        DESTINATION ${CMAKE_INSTALL_PREFIX}/include
        FILES_MATCHING PATTERN "*.h"
)
# 安装动态库
install(TARGETS ${CMAKE_PROJECT_NAME} DESTINATION lib)
install(TARGETS ${CMAKE_PROJECT_NAME} DESTINATION bin)